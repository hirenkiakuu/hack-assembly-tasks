//Псевдокод:
// n = ... любое число
// for (i = 0; i < n; i++) {
//      if (ram[i] < ram[108 + i]) {
//         i = i * i
//       } 
//    }

@10
D=A
@n // переменная, которая будет обозначать количество итераций цикла, я указал 10 итераций
M=D
@i // индекс-указатель, нужен в цикле
M=0

(LOOP) 
    @i 
    D=M
    @n
    D=M-D //n - i
    @LOOP_END // условие выхода из цикла (i >= n) то есть n - i <= 0
    D;JEQ

    // получаем значение по адресу 108 + i 
    @108
    D=A //D=108
    @i
    A=D+M //адрес новой ячейки = 108+i
    D=M //значение ячейки 108+i

    // находим RAM[108 + i] - RAM[i]
    @i
    A=M //ячейка с адресом i
    D=D-M //RAM[108 + i] - RAM[i]
    
    
    @IF_COND_TRUE // если RAM[108 + i] - RAM[i] > 0, то условие выполняется
    D;JGT
    @i // если условие не выполнилось, то i просто инкрементируется и переходим к новой итерации цикла
    M=M+1
    @LOOP // переход к следующей итерации внешнего цикла
    0;JMP
        (IF_COND_TRUE)
            // суммируем i c самой собой i раз (то есть i=i*i это i=i+i+i+i+i... и так i раз)
            @i_sum // переменная для суммирования i с самой собой i раз
            M=0
            @i
            D=M
            @iterations_left // счетчик количества сложений i с самой собой, который равен i
            M=D

            (LOOP_FOR_I)
                @iterations_left // если счетчик количества сложений i с самой собой становится равен 0 то цикл заканчивается
                D=M
                @LOOP_FOR_I_END
                D;JEQ

                @i
                D=M
                @i_sum //прибавляем к результирующей сумме i 
                M=M+D

                @iterations_left // уменьшаем счетчик оставшихся итераций на 1
                M=M-1

                @LOOP_FOR_I
                0;JMP
            (LOOP_FOR_I_END)

            @i_sum
            D=M
            @i
            M=D // присваиваем к i результат i*i

            @LOOP // переход к следующей итерации
            0;JMP
(LOOP_END)

(END)
    @END // бесконечный цикл, конец программы
    0;JMP