// псевдокод
//n = ... любое число
//for (i = 1; i < n; i++) {
//    for (j = 0; j < n; j+=i) {
//        if (ram[i] < ram[108 + j]) {
//            i = i * j
//        }
//    }
//}

@10
D=A
@n // переменная, которая будет обозначать количество итераций цикла, я указал 10 итераций
M=D
@i // индекс-указатель, нужен во внешнем цикле
M=1
@j // индекс-указатель, нужен во внутреннем цикле
M=0

(OUTER_LOOP_I) // внешний цикл for i...
    @i
    D=M
    @n
    D=M-D //n - i
    @OUTER_LOOP_I_END // условие выхода из цикла (i >= n) то есть n - i <= 0
    D;JEQ
     
     
    (INNER_LOOP_J) // внутренний цикл for j...
        @j
        D=M
        @n
        D=M-D //n - j
        @INNER_LOOP_J_END // условие выхода из внутреннего цикла (j >= n) то есть n - j <= 0
        D;JEQ

        // получаем значение по адресу 108 + j 
        @108
        D=A //D=108
        @j
        A=D+M // адрес новой ячейки = 108 + j
        D=M // значение ячейки 108+j

        // находим RAM[108 + j] - RAM[i]
        @i
        A=M // ячейка с адресом i
        D=D-M //RAM[108 + j] - RAM[i]

        @IF_COND_TRUE // если RAM[108 + j] - RAM[i] > 0, то условие выполняется
        D;JGT
        @i // если условие не выполнилось, то j просто увеличивается на i и переходим к следующей итерации внутреннего цикла
        D=M
        @j // увеличиваем j на i (j+=i)
        M=M+D
        @INNER_LOOP_J // переход к следующей итерации внутреннего цикла
        0;JMP

        (IF_COND_TRUE)
            // суммируем i c самой собой j раз (то есть i=i*j это i=i+i+i+i+i... и так j раз)
            @i_sum // переменная для суммирования i с самой собой j раз
            M=0 
            @j
            D=M
            @iterations_left // счетчик количества сложений i с самой собой, который равен j
            M=D

            (LOOP_FOR_I)
                @iterations_left
                D=M
                @LOOP_FOR_I_END
                D;JEQ

                @i
                D=M
                @i_sum //прибавляем к результирующей сумме i 
                M=M+D

                @iterations_left // уменьшаем счетчик оставшихся итераций на 1
                M=M-1

                @LOOP_FOR_I
                0;JMP
            (LOOP_FOR_I_END)

            @i_sum
            D=M
            @i
            M=D // присваиваем к i результат i*j

            @INNER_LOOP_J // переход к следующей итерации внутреннего цикла
            0;JMP
    (INNER_LOOP_J_END)

    @j // сброс j в ноль для следующий итерации внешнего цикла
    M=0

    @i // инкремент i (i++)
    M=M+1

    @OUTER_LOOP_I
    0;JMP
(OUTER_LOOP_I_END)

(END)
    @END // бесконечный цикл, конец программы
    0;JMP